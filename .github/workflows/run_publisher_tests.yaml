name: Run publisher integration tests

on:
  workflow_dispatch:
  push:
    branches:
      - integration-tests

jobs:
  run_tests:
    name: Run tests
    runs-on: ubuntu-latest
    environment: dev
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.x

      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true
          
      - name: Run tests
        uses: azure/powershell@v1
        with:
          inlineScript: |
            Set-StrictMode -Version Latest
            $ErrorActionPreference = "Stop"
            $VerbosePreference = "Continue"
            $InformationPreference = "Continue"

            $env:PUBLISHER_ARTIFACTS_PATH = Join-Path "${{ github.workspace }}" "tools" "code" "publisher.integration.tests" "test-artifacts"
            $env:EXTRACTOR_ARTIFACTS_PATH = Join-Path "${{ runner.temp }}" "extractor artifacts"
            $env:AZURE_BEARER_TOKEN = (Get-AzAccessToken).Token
            $env:AZURE_CLOUD_ENVIRONMENT = "AzurePublicCloud"
            $env:AZURE_API_MANAGEMENT_SERVICE_NAME = "${{ env.APIM_INSTANCE_NAME }}"
            $env:AZURE_RESOURCE_GROUP_NAME = "${{ secrets.AZURE_RESOURCE_GROUP_NAME }}"

            $testProjectPath = Join-Path "${{ github.workspace }}" "tools" "code" "publisher.integration.tests" "publisher.integration.tests.csproj"
            $testResultsHtmlPath = Join-Path "${{ runner.temp }}" "testresults.html"
            & dotnet test "$testProjectPath" --logger "console;verbosity=detailed" --logger "html;LogFileName=$testResultsHtmlPath"
            $result = $LASTEXITCODE
            Get-Content -Path "$testResultsHtmlPath" -Raw >> $env:GITHUB_STEP_SUMMARY
            if ($result -ne 0) { throw "Running test failed."}

          azPSVersion: "latest"
