parameters:
  - name: API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH
    type: string
    displayName: Folder where the artifacts reside
  - name: ENVIRONMENT
    type: string
    displayName: Environment to display
  - name: RESOURCE_GROUP_NAME
    type: string
    displayName: Resource Group Name
  - name: API_MANAGEMENT_SERVICE_NAME
    type: string
    displayName: APIM Instance Name
    default : ""
  - name: CONFIGURATION_YAML_PATH
    type: string
    displayName: Optional configuration file
    default : ""
  - name: COMMIT_ID
    type: string
    default: publish-artifacts-in-last-commit

     

steps:
- script: echo Provided configuration was ${{ parameters.CONFIGURATION_YAML_PATH }}
  displayName: Print the name of the yaml configuration file if provided
- script: echo Provided app service name was ${{ parameters.API_MANAGEMENT_SERVICE_NAME }}
  displayName: Print the name of the apim service name if provided
- task: Npm@1
  displayName: 'Installing Stoplight Spectral.'
  inputs:
    command: custom   
    verbose: false
    customCommand: 'install -g @stoplight/spectral'

- checkout: self
  fetchDepth: 0

- script: spectral lint "$(Build.SourcesDirectory)\${{ parameters.API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH }}\apis\*.{json,yml,yaml}" --ruleset https://raw.githubusercontent.com/connectedcircuits/devops-api-linter/main/rules.yaml
  displayName: 'Lint API definition' 

- task: UniversalPackages@0
  displayName: Download publisher
  inputs:
    downloadDirectory: '$(Pipeline.Workspace)/publisher'
    vstsFeed: $(System.TeamProject)/$(ARTIFACTS_FEED_NAME)
    vstsFeedPackage: 'publisher'
    vstsPackageVersion: '*'

- task: AzureCLI@2
  displayName: Set publishing variables
  inputs:
    azureSubscription: "$(SERVICE_CONNECTION_NAME)"
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: |
      echo "##vso[task.setvariable issecret=true;variable=AZURE_BEARER_TOKEN]$(az account get-access-token --query "accessToken" --output tsv)"
      echo "##vso[task.setvariable issecret=true;variable=AZURE_CLIENT_ID]$servicePrincipalId"
      echo "##vso[task.setvariable issecret=true;variable=AZURE_CLIENT_SECRET]$servicePrincipalKey"
      echo "##vso[task.setvariable issecret=true;variable=AZURE_TENANT_ID]$tenantId"
      echo "##vso[task.setvariable issecret=true;variable=AZURE_SUBSCRIPTION_ID]$(az account show --query "id" --output tsv)"
    addSpnToEnvironment: true
    failOnStandardError: true

- task: AzureCLI@2
  displayName: Run publisher for ${{ parameters.ENVIRONMENT}} environment
  inputs:
    azureSubscription: "$(SERVICE_CONNECTION_NAME)"
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: |
      chmod u+x $(Pipeline.Workspace)/publisher/publisher
      $(Pipeline.Workspace)/publisher/publisher
      result=$?
      echo "Exit code is $result"
      exit $result
    addSpnToEnvironment: true
    failOnStandardError: true
  env:
    AZURE_BEARER_TOKEN: $(AZURE_BEARER_TOKEN)
    AZURE_CLIENT_ID: $(AZURE_CLIENT_ID)
    AZURE_CLIENT_SECRET: $(AZURE_CLIENT_SECRET)
    AZURE_TENANT_ID: $(AZURE_TENANT_ID)
    AZURE_SUBSCRIPTION_ID: $(AZURE_SUBSCRIPTION_ID)
    AZURE_RESOURCE_GROUP_NAME: ${{ parameters.RESOURCE_GROUP_NAME }}
    API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH:  $(Build.SourcesDirectory)/${{ parameters.API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH }}
    ${{ if ne( parameters['API_MANAGEMENT_SERVICE_NAME'], '' ) }}:
      API_MANAGEMENT_SERVICE_NAME :  ${{ parameters.API_MANAGEMENT_SERVICE_NAME }}
    ${{ if eq( parameters['COMMIT_ID'], 'publish-artifacts-in-last-commit' ) }}:
      COMMIT_ID: $(Build.SourceVersion)
    ${{ if ne( parameters['CONFIGURATION_YAML_PATH'], '' ) }}:
      CONFIGURATION_YAML_PATH:  ${{ parameters.CONFIGURATION_YAML_PATH }}